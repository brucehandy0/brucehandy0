{"pages":[{"title":"404","text":"","path":"404/index.html","date":"03-28","excerpt":""},{"title":"about","text":"","path":"about/index.html","date":"03-29","excerpt":""},{"title":"search","text":"","path":"search/index.html","date":"03-28","excerpt":""}],"posts":[{"title":"mysql主从复制注意点","text":"2个互相通信的电脑（mysql） 主数据库授予权限GRANT REPLICATION SLAVE ON . TO ‘mysql12’@’192.168.95.12’ IDENTIFIED BY ‘mysql12’; 从数据库实现复制（实际环境不用root账号）change master to master_host=’192.168.1.180’,master_user=’root’,master_password=’root’,master_log_file=’mysql-bin.000002’,master_log_pos=107; master_user 数据库用户master_password 数据库密码 mysql版本5.6是stop slave和start slave不是salve stop SET GLOBAL SQL_SLAVE_SKIP_COUNTER = 1 跳过一个事务 start slave前尽量确保2个数据库的数据一致","path":"2018/04/10/mysql主从复制注意点/","date":"04-10","excerpt":""},{"title":"XDG基本目录规范","text":"XDG基本目录规范 定义 一个规范，用来指定文件和文件格式，文件位置 规范内容 有一个相对于用户特定的数据文件应该写入的基本目录。该目录由环境变量定义$XDG_DATA_HOME。 有一个基本目录相对应用户特定的配置文件应该写入。该目录由环境变量定义$XDG_CONFIG_HOME。 有一组偏好的基本目录，相对于其中的数据文件应该被搜索。这组目录由环境变量定义$XDG_DATA_DIRS。 有一组首选的基本目录相对于哪些配置文件应该被搜索。这组目录由环境变量定义$XDG_CONFIG_DIRS。 有一个单独的基本目录，用户特定的非必要（缓存）数据应该写入其中。该目录由环境变量定义$XDG_CACHE_HOME。 有一个单独的基本目录，用户特定的运行时文件和其他文件对象应放置在该目录中。该目录由环境变量定义$XDG_RUNTIME_DIR。 laravel中xdg的实现代码,（env文件可以定义路径）123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109class Xdg&#123; const S_IFDIR = 040000; // directory const S_IRWXO = 00007; // rwx other const S_IRWXG = 00056; // rwx group const RUNTIME_DIR_FALLBACK = &apos;php-xdg-runtime-dir-fallback-&apos;; /** * @return string */ public function getHomeDir() &#123; return getenv(&apos;HOME&apos;) ?: (getenv(&apos;HOMEDRIVE&apos;) . DIRECTORY_SEPARATOR . getenv(&apos;HOMEPATH&apos;)); &#125; /** * @return string */ public function getHomeConfigDir() &#123; $path = getenv(&apos;XDG_CONFIG_HOME&apos;) ?: $this-&gt;getHomeDir() . DIRECTORY_SEPARATOR . &apos;.config&apos;; return $path; &#125; /** * @return string */ public function getHomeDataDir() &#123; $path = getenv(&apos;XDG_DATA_HOME&apos;) ?: $this-&gt;getHomeDir() . DIRECTORY_SEPARATOR . &apos;.local&apos; . DIRECTORY_SEPARATOR . &apos;share&apos;; return $path; &#125; /** * @return array */ public function getConfigDirs() &#123; $configDirs = getenv(&apos;XDG_CONFIG_DIRS&apos;) ? explode(&apos;:&apos;, getenv(&apos;XDG_CONFIG_DIRS&apos;)) : array(&apos;/etc/xdg&apos;); $paths = array_merge(array($this-&gt;getHomeConfigDir()), $configDirs); return $paths; &#125; /** * @return array */ public function getDataDirs() &#123; $dataDirs = getenv(&apos;XDG_DATA_DIRS&apos;) ? explode(&apos;:&apos;, getenv(&apos;XDG_DATA_DIRS&apos;)) : array(&apos;/usr/local/share&apos;, &apos;/usr/share&apos;); $paths = array_merge(array($this-&gt;getHomeDataDir()), $dataDirs); return $paths; &#125; /** * @return string */ public function getHomeCacheDir() &#123; $path = getenv(&apos;XDG_CACHE_HOME&apos;) ?: $this-&gt;getHomeDir() . DIRECTORY_SEPARATOR . &apos;.cache&apos;; return $path; &#125; public function getRuntimeDir($strict=true) &#123; if ($runtimeDir = getenv(&apos;XDG_RUNTIME_DIR&apos;)) &#123; return $runtimeDir; &#125; if ($strict) &#123; throw new \\RuntimeException(&apos;XDG_RUNTIME_DIR was not set&apos;); &#125; $fallback = sys_get_temp_dir() . DIRECTORY_SEPARATOR . self::RUNTIME_DIR_FALLBACK . getenv(&apos;USER&apos;); $create = false; if (!is_dir($fallback)) &#123; mkdir($fallback, 0700, true); &#125; $st = lstat($fallback); # The fallback must be a directory if (!$st[&apos;mode&apos;] &amp; self::S_IFDIR) &#123; rmdir($fallback); $create = true; &#125; elseif ($st[&apos;uid&apos;] != getmyuid() || $st[&apos;mode&apos;] &amp; (self::S_IRWXG | self::S_IRWXO) ) &#123; rmdir($fallback); $create = true; &#125; if ($create) &#123; mkdir($fallback, 0700, true); &#125; return $fallback; &#125;&#125; 参考 https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html","path":"2018/04/02/XDG standard/","date":"04-02","excerpt":""},{"title":"微信公众号发送模版消息,错误40001","text":"微信如果手动设置token,token就是固定的，但是很多时候会出意外 比如当微信发送模版消息，会报40001错误，就是token验证不一致，所以非必要情况不建议用手动指定token 微信模版消息中的url参数，不一定非要填‘http://weixin.qq.com/download’， 这个url是指用户点击模版消息时 跳转的地址url","path":"2017/11/29/微信公众号发送模版消息,错误40001/","date":"11-29","excerpt":""},{"title":"PHPMailer修改端口报错","text":"使用的阿里云服务器25端口禁止，所以smtp服务器连接不上，可以换用端口465或994 我的用的163邮箱,详情http://help.163.com/09/1223/14/5R7P3QI100753VB8.html $mail-&gt;Port = 994; $mail-&gt;Host = “ssl://smtp.163.com” 特别注意$mail-&gt;Password不是登录密码，是客户端授权码","path":"2017/11/16/PHPMailer修改端口报错/","date":"11-16","excerpt":""},{"title":"CentOS 7 安装ffmpeg","text":"CentOS 7 安装ffmpeg安装EPEL Release，因为安装需要使用其他的repo源，所以需要EPEL支持yum install -y epel-release 如果出现缺少Code提示，可以： sudo rpm –import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7 安装完成之后，可以查看是否安装成功 yum repolist 安装Nux-Dextop源导入一个Codesudo rpm –import http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro安装nux-dextop 源sudo rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-1.el.nux.noarch.rpm查看repo源是否安装成功yum repolist yum安装ffmpegyum install -y ffmpeg安装完成后检查ffmpeg 版本ffmpeg -version CentOS 6和7安装方法是不一样的，下面分别说明： 安装前都需要先安装epel扩展源 yum -y install epel-release CentOS 6比较简单，安装yum源之后直接安装即可： su -c ‘yum localinstall –nogpgcheck https://download1.rpmfusion.org/free/el/rpmfusion-free-release-6.noarch.rpm https://download1.rpmfusion.org/nonfree/el/rpmfusion-nonfree-release-6.noarch.rpm‘ yum -y install ffmpeg ffmpeg-devel ffmpeg基本命令分离视频音频流 ffmpeg -i input_file -vcodec copy -an output_file_video //分离视频流ffmpeg -i input_file -acodec copy -vn output_file_audio //分离音频流 视频解复用 ffmpeg –i test.mp4 –vcodec copy –an –f m4v test.264ffmpeg –i test.avi –vcodec copy –an –f m4v test.264 视频转码 ffmpeg –i test.mp4 –vcodec h264 –s 352278 –an –f m4v test.264 //转码为码流原始文件ffmpeg –i test.mp4 –vcodec h264 –bf 0 –g 25 –s 352278 –an –f m4v test.264 //转码为码流原始文件ffmpeg –i test.avi -vcodec mpeg4 –vtag xvid –qsame test_xvid.avi //转码为封装文件//-bf B帧数目控制，-g 关键帧间隔控制，-s 分辨率控制 视频封装 ffmpeg –i video_file –i audio_file –vcodec copy –acodec copy output_file 视频剪切 ffmpeg –i test.avi –r 1 –f image2 image-%3d.jpeg //提取图片ffmpeg -ss 0:1:30 -t 0:0:20 -i input.avi -vcodec copy -acodec copy output.avi //剪切视频 ffmpeg -ss 0:0:0 -t 0:0:20 -i /var/www/html/2.mp4 -vcodec copy -acodec copy /var/www/html/output.mp4 //-r 提取图像的频率，-ss 开始时间，-t 持续时间 视频录制 ffmpeg –i rtsp://192.168.3.205:5555/test –vcodec copy out.avi YUV序列播放 ffplay -f rawvideo -video_size 1920x1080 input.yuv YUV序列转AVI ffmpeg –s w*h –pix_fmt yuv420p –i input.yuv –vcodec mpeg4 output.avi","path":"2017/05/29/CentOS 7 安装ffmpeg/","date":"05-29","excerpt":""},{"title":"hexo修改默认端口","text":"本机的4000端口被占用了，用hexo s -p 80 ，可以暂时修改启动端口，但是每次启动都要写-p 80，很不爽， 我安装的hexo版本是3.2.2，找到node_modules\\hexo-server\\index.js文件，可以修改默认的port值 部署中我遇到的一些问题部署到github上,建立的库的名字要注意yml格式_config.yml文件的deploy:type: git _config.yml文件的url和root字段，我的是这样的url: https://brucehandy0.github.ioroot: /","path":"2017/03/14/hexo修改默认端口/","date":"03-14","excerpt":""},{"title":"js单例模式","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354//单例模式1var mySingleton = &#123; name:’songjiang’, age:’45’, run:function()&#123; // &#125;&#125;//单例模式2，var mySingleton2 = function()&#123;//私有var instantiated;var privateVariable = ‘v’;function walk()&#123;&#125;;//公有if(!instantiated)&#123; instantiated = &#123; publicV : ‘pv’, publicMethod:function()&#123; console.log(privateVariable); &#125; &#125;&#125;return instantiated;&#125;//单例模式3 只有当使用时才会初始化var mySingleton3 = (function()&#123; var instantiated ; //主体 function init()&#123; return&#123; publicMethod:function()&#123; &#125;, publicV:’v’, &#125; &#125; return &#123; getInstance:function()&#123; if(!instantiated)&#123; insantiated = init(); &#125; return insantiated; &#125; &#125;&#125;)();","path":"2017/03/14/js单例模式/","date":"03-14","excerpt":""},{"title":"js中的length","text":"数组和集合都有length属性，我们常常用length来遍历它们 注意一下length，length的值变量，取length值时每次都检测length的是多少， 如果在遍历时添加数据，很有可能造成死循环12345var alldivs = document.getElementsByTagName(‘div’);for (var i = 0; i &lt; alldivs.length; i++) &#123; console.log(alldivs); //document.body.appendChild(document.createElement(‘div’))&#125; 死循环 可以用一个变量len,由于只赋值一次，即时length的值变化，len也是固定的12345678var arr = [];arr[0] = 0;arr[1] = 1;var len = arr.length;for(var i=0;i&lt;len;i++)&#123; console.log(arr); arr.push(1);&#125; ok","path":"2016/12/05/js中的length/","date":"12-05","excerpt":""},{"title":"autohotkey 改建","text":"昨天码字时，感到有些不舒畅，比如上下左右键好远，我想把=换成 = 的风格等等， 遂接触了autohotkey，感觉还不错的,给大家安利一下（当然不止是这一点点的好处啦） 我的codestyle.ahk代码 ;RCtrl replace right+;+enter ，按下右边ctrl等同 右+分号+回车 三键RCtrl::{Send,{Right}{`;}{Enter}return} ; = replace space+=+space~LAlt &amp; =::{Send,{Space}{`=}{Space}return};RAlt &amp; w::{Send,{Up}return}RAlt &amp; s::{Send,{Down}return}RAlt &amp; a::{Send,{Left}return}RAlt &amp; d::{Send,{Right}return}","path":"2016/10/27/autohotkey 改建/","date":"10-27","excerpt":""},{"title":"js简易实现private,public,static和继承","text":"12345678910111213141516171819202122232425262728293031323334js实现private，public，static和继承 ///构造函数function person()&#123; this.name = ‘’;//这个相当于public var age =12;//private //不建议每个函数都用this.getAge，浪费内存， //但是对于私有变量age只能用this.getAge来获取值 this.getAge = function()&#123; return age; &#125;;&#125;//添加静态属性或方法person.TYPE = ‘people’;person.sayHello = function()&#123; console.log(‘hello world’);&#125;//类的public方法person.prototype.setName=function(name)&#123; this.name = name;&#125;person.prototype.getName=function()&#123; return this.name;&#125;person.prototype.setAge = function(age)&#123; this.age = age;&#125;var p = new person();p.setName(‘lili’);p.setAge(45);//静态类var staticClass = &#123;&#125;","path":"2016/10/09/js简易实现private,public,static和继承/","date":"10-09","excerpt":""},{"title":"js常用函数的封装","text":"整理我的常用封装函数//检测数据类型123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171function chechOutType(obj)&#123; var o = Object.prototype.toString.apply(obj); switch(o)&#123; case &apos;[object Function]&apos;: o = &apos;isfunction&apos;; break; case &apos;[object Object]&apos;: o = &apos;isObject&apos;; break; case &apos;[object RegExp]&apos;: o = &apos;isRegExp&apos;; break; case &apos;[object Array]&apos;: o = &apos;isArray&apos;; break; //这个未检测 case &apos;[object JSON]&apos;: o = &apos;isJSON&apos;; break; case &apos;[object String]&apos;: o = &apos;isString&apos;; break; case &apos;[object Number]&apos;: o = &apos;isNumber&apos;; break; case &apos;[object Boolean]&apos;: o = &apos;isBoolean&apos;; break; //这个不常用，webgl会涉及 case &apos;[object ArrayBuffer]&apos;: o = &apos;isArrayBuffer&apos; break; default: alert(&quot;not of them&quot;); &#125; return o;&#125;;//另一种写法 var type = function(o)&#123; var s = Object.prototype.toString.apply(o); return s.match(/\\[object (.*?)\\]/)[1].toLowerCase(); &#125; var array=[&apos;Null&apos;,&apos;Undefined&apos;,&apos;Object&apos;,&apos;Array&apos;,&apos;String&apos;,&apos;Number&apos;,&apos;Boolean&apos;,&apos;Function&apos;,&apos;RegExp&apos;,&apos;NaN&apos;,&apos;Infinite&apos;]; array.forEach(function(t)&#123; type[&quot;is&quot;+t] = function(o)&#123; return type(o) === t.toLowerCase(); &#125; &#125;); var a=54; console.log(type.isArray(a));`&lt;/pre&gt;//添加事件监听&lt;pre&gt;`function addEventHandler(target,type,func)&#123; if(target.addEventListener)&#123; target.addEventListener(type, func, false); &#125;else if(target.attachEvent)&#123; target.attachEvent(&quot;on&quot; + type, func); &#125;else&#123; target[&quot;on&quot; + type] = func; &#125; &#125;`&lt;/pre&gt;//得到style&lt;pre&gt;` function getstyle(obj,name)&#123; if(obj.currentStyle)&#123; return obj.currentStyle[name]; &#125;else&#123; return getComputedStyle(obj,false)[name]; &#125; &#125;`&lt;/pre&gt;//自己常用&lt;pre&gt;`function con(obj,type)&#123; type = type||&apos;l&apos;; switch(type)&#123; case &apos;l&apos;: console.log(obj); break; case &apos;i&apos;: console.info(obj); break; case &apos;e&apos;: console.error(obj); break; case &apos;d&apos;: console.debug(obj); break; case &apos;w&apos;: console.warn(obj); break; case &apos;dir&apos;: console.dir(obj); break; case &apos;assert&apos;: console.assert(obj); break; case &apos;trace&apos;: console.trace(obj); break; &#125;&#125;`&lt;/pre&gt;//通过类名查找元素，但是要给定一个父元素&lt;pre&gt;`function getElementsByClass(oParent, target) &#123; var aEle = oParent.getElementsByTagName(&apos;*&apos;); var aResult = []; var reg = new RegExp(&apos;\\\\b&apos; + target + &apos;\\\\b&apos;, &apos;i&apos;); console.info(reg); var i = 0; for(i = 0; i &amp;lt; aEle.length; i++) &#123; if(reg.test(aEle[i].className)) &#123; aResult.push(aEle[i]); &#125; &#125; return aResult;&#125;function myQuery(obj)&#123; //保存符合条件的子元素 this.children=[]; switch(typeof obj)&#123; case &apos;function&apos;: //函数 addEventHandler(window,&apos;load&apos;,obj); break; case &apos;string&apos;: var objWithoutInitial = obj.substring(1); switch(obj.charAt(0))&#123; case &apos;#&apos;: //id选择器 var o = document.getElementById(objWithoutInitial); this.children.push(o); break; case &apos;.&apos;: //类选择器 this.children = getElementsByClass(document,objWithoutInitial); break; default: //tag元素选择器 this.children =document.getElementsByTagName(obj); &#125; break; case &apos;object&apos;: this.children.push(obj); break; default: alert(&apos;不支持此用法&apos;); &#125;&#125;function $(obj)&#123; return new myQuery(obj);&#125;//实现数组换行显示，,默认每十行一换行，未实现等距输出function showArray(arr,len)&#123; len = len|10; var showArr = arr; for(var i=0;i&lt;(arr.length/len);i++)&#123; showArr = arr.slice(0+len*i,len+len*i); console.log(showArr); &#125;&#125;","path":"2016/09/10/js常用函数的封装/","date":"09-10","excerpt":""},{"title":"hexo修改默认端口","text":"脚本呢，就是因为有的人很懒，懒得去做重复的事情所以拿脚本来代替自己做重复的事情， 今天想开机启动一些软件，但是在软件的设置中是没有找到开机启动的设置怎么办呢，想到bat文件有操作系统（window系统）的功能查一查ok get it第一步 启动一个程序start “D:\\Program Files (x86)\\Notepad++\\notepad++.exe”这个是bat文件 启动一个软件的代码怎么不行 ，路径名中带有空格的话 要这样写start “” “D:\\Program Files (x86)\\Notepad++\\notepad++.exe”路径名中有中文字符呢 将文件格式改为ansi格式就ok了 第二步 开机启动我的操作系统是win8的，下面这个就启动项文件夹C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp将bat文件放到这个文件夹下就ok了 最小化启动 start /min “” “C:\\Users\\li\\AppData\\Local\\Wunderlist\\Wunderlist.exe”","path":"2016/09/04/win下开机启动软件/","date":"09-04","excerpt":""},{"title":"hexo修改默认端口","text":"git init // git c创建库 git remote add origin https://gitee.com/brucehandy357/test.git // git远程连接 git add readme.txt git commit -m “wrote a readme file” git push -u origin master加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。 git push origin master git pull 时版本冲突 放弃本地修改，直接覆盖之 git reset –hard git pull 查名字git config user.name git config –list 或者查看~/.gitconfig文件。 改名字：git config –global user.name “Furzoom”# orvi ~/.gitconfig 配置git服务器 要点git跟svn不同的是 ，git是分布式， 即每一个git仓库都可以成为git服务器 因为一般在linux下配置要创建一个用户 ，一个用户组 等 初始化 git仓库，git init test.git 把仓库的分配给 git用户 .git config配置文件添加 可以从远程接受提交[receive]denyCurrentBranch = ignore 设置git服务器，当文件变动时自动更新， gitblitgit服务器的图形界面的工具 详情http://blog.csdn.net/u012606648/article/details/52514745?readlog","path":"2016/06/12/git常用命令/","date":"06-12","excerpt":""},{"title":"backbone入门学习","text":"这几天初学Backbone.js,（下文简称bbjs）学到的几点心得总结一下： 适用范围：重客户端站点，服务端只提供json。 特点：bbjs是一个前段js的muc框架，（与bootstrap，jquery一起食用味道更佳），数据（model）和展示（view）分离 bbjs下层依赖underscore.js。 bbjs主要包括model，collection，view，router，history,还有模板的运用, 模板挺好用的,前期主要难点在view视图的render(); 比angular.js好学，但是学习材料较少（国内） 学习链接：underscore.js中文文档 Backbone.js中文文档(未完全翻译)","path":"2015/12/29/backbone入门学习/","date":"12-29","excerpt":""},{"title":"jdk高版本不能覆盖低版本怎么办","text":"今天碰到 unsupportedclassversionerror 这个异常，查一查知道，jdk不能从高版本转到低版本， 以前安装的是jdk1.7，现在我用的是jdk1.8，但是cmd窗口的java -verison 还是1.7 原因 在安装JDK1.7时（本机先安装jdk1.7再安装的jdk1.8），自动将java.exe、javaw.exe、javaws.exe三个可执行文件复制到了C:\\Windows\\System32目录，由于这个目录在WINDOWS环境变量中的优先级高于JAVA_HOME设置的环境变量优先级 解决方案：将java.exe,javaw.exe,javaws.exe删除即可。开启新的命令行窗口，再执行java -version时，就得到了期望中的结果 现在解决 参考资料; http://luohaiyong1024.blog.163.com/blog/static/2682797201231104615287/","path":"2015/11/09/jdk高版本不能覆盖低版本怎么办/","date":"11-09","excerpt":""}]}